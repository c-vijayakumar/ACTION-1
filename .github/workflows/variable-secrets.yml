# name: Exploring Variables and Secrets

# on:
#     push

# jobs:
########## environment variables at step levels ###########
#   docker:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Docker Build
#       env:
#         CONTAINER_REGISTRY: docker.io
#         DOCKER_USERNAME: cvijayramya
#         IMAGE_NAME: github-action-nginx
#       run: echo docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

#     - name: Docker Login
#       env:
#         DOCKER_PASSWORD: Thankyougod@2025
#         DOCKER_USERNAME: cvijayramya
#       run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

#     - name: Docker Publish
#       env:
#         CONTAINER_REGISTRY: docker.io
#         DOCKER_USERNAME: cvijayramya
#         IMAGE_NAME: github-action-nginx
#       run: echo docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest
    

#   deploy:
#     needs: docker
#     runs-on: ubuntu-latest
#     steps:
#     - name: Docker run
#       env:
#         CONTAINER_REGISTRY: docker.io
#         DOCKER_USERNAME: cvijayramya
#         IMAGE_NAME: github-action-nginx
#       run: echo docker run -d -p 8080:80 $CONTAINER_RESITRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

####### environment variable at job levels ############

    # docker:
    #     env:
    #         CONTAINER_REGISTRY: docker.io
    #         DOCKER_USERNAME: cvijayramya
    #         IMAGE_NAME: github-action-nginx
    #     runs-on: ubuntu-latest
    #     steps:
    #     - name: Docker Build
    #       run: echo docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

    #     - name: Docker Login
    #       env:
    #         DOCKER_PASSWORD: Thankugod@2025
    #       run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

    #     - name: Docker Publish
    #       run: echo docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest
    

    # deploy:
    #     env:
    #         CONTAINER_REGISTRY: docker.io
    #         DOCKER_USERNAME: cvijayramya
    #         IMAGE_NAME: github-action-nginx

    #     needs: docker
    #     runs-on: ubuntu-latest
    #     steps:
    #     - name: Docker run
    #       run: echo docker run -d -p 8080:80 $CONTAINER_RESITRY/$DOCKER_USERNAME/$IMAGE_NAME:latest


# By default github action will kill the workflow after 6 hours.
# If the workflow keeps of running for some reason, will cost more. so we can use timeout option here to cancel the workflow 
# we can set timeout if workflow/job/step level

# using echo command, so it just echo command
name: Exploring Variables and Secrets

on:
  workflow_dispatch:
  # schedule:
  # - cron: "*/1 * * * *"
    # push

env:
    CONTAINER_REGISTRY: docker.io
    IMAGE_NAME: github-action-nginx

jobs:
    docker:
        runs-on: ubuntu-latest
        steps:
        - name: Docker Build
          run: echo docker build -t $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest # vars need to be used to acess repository, organization, environment level variables

        - name: Docker Login
          run: echo docker login --username=${{ vars.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}

        - name: Docker Publish
          run: echo docker push $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest
    
    deploy:
        needs: docker
        concurrency: # will cancel existing/current workflow
          group: peroduction-deployment
          cancel-in-progress: true # will cancel existing job, if false, will cancel the current triggered job
        runs-on: ubuntu-latest
        steps:
        - name: Docker run
          timeout-minutes: 1
          run: |
            echo docker run -d -p 8080:80 $CONTAINER_RESITRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest
            sleep 600s # by default github action will kill the workflow after 6 hours.